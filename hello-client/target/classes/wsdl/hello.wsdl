<?xml version="1.0" encoding="UTF-8"?>
<!--
  Licensed to the Apache Software Foundation (ASF) under one
  or more contributor license agreements. See the NOTICE file
  distributed with this work for additional information
  regarding copyright ownership. The ASF licenses this file
  to you under the Apache License, Version 2.0 (the
  "License"); you may not use this file except in compliance
  with the License. You may obtain a copy of the License at
 
  http://www.apache.org/licenses/LICENSE-2.0
 
  Unless required by applicable law or agreed to in writing,
  software distributed under the License is distributed on an
  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
  KIND, either express or implied. See the License for the
  specific language governing permissions and limitations
  under the License.
-->
<wsdl:definitions name="Hello" targetNamespace="http://thomasjohansen.it/hello"
    xmlns="http://schemas.xmlsoap.org/wsdl/" 
    xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" 
    xmlns:tns="http://thomasjohansen.it/hello"
    xmlns:x1="http://thomasjohansen.it/hello/types"
    xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/"
    xmlns:wsp="http://www.w3.org/ns/ws-policy"
    xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd"
    xmlns:sp="http://docs.oasis-open.org/ws-sx/ws-securitypolicy/200702"
    xmlns:t="http://docs.oasis-open.org/ws-sx/ws-trust/200512"
    xmlns:wsaw="http://www.w3.org/2005/08/addressing"
    xmlns:wsam="http://www.w3.org/2007/05/addressing/metadata"
    xmlns:xsd="http://www.w3.org/2001/XMLSchema">

    <wsdl:types>
        <schema targetNamespace="http://thomasjohansen.it/hello/types"
            xmlns="http://www.w3.org/2001/XMLSchema"
	        xmlns:tns="http://thomasjohansen.it/hello/types"
            elementFormDefault="qualified">
            <element name="helloRequest">
                <complexType>
                    <sequence>
                        <element name="requestText" type="string"/>
                    </sequence>
                </complexType>
            </element>
            <element name="helloResponse">
                <complexType>
                    <sequence>
                        <element name="responseText" type="string"/>
                    </sequence>
                </complexType>
            </element>
        </schema>
    </wsdl:types>

    <wsdl:message name="helloRequest">
        <wsdl:part element="x1:helloRequest" name="request"/>
    </wsdl:message>

    <wsdl:message name="helloResponse">
        <wsdl:part element="x1:helloResponse" name="response"/>
    </wsdl:message>
    
    <wsdl:portType name="Hello">
        <wsdl:operation name="sayHello">
            <wsdl:input message="tns:helloRequest" name="helloRequest"/>
            <wsdl:output message="tns:helloResponse" name="helloResponse"/>
        </wsdl:operation>
    </wsdl:portType>

    <wsdl:binding name="HelloBinding" type="tns:Hello">
        <wsp:PolicyReference URI="#AsymmetricSAML2Policy" />
        <soap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
                <wsdl:operation name="sayHello">
            <soap:operation soapAction="" style="document"/>
            <wsdl:input name="helloRequest">
                <soap:body use="literal"/>
            </wsdl:input>
            <wsdl:output name="helloResponse">
                <soap:body use="literal"/>
            </wsdl:output>
        </wsdl:operation>
    </wsdl:binding>

    <wsdl:service name="HelloService">
        <wsdl:port binding="tns:HelloBinding" name="HelloPort">
            <soap:address location="http://localhost:8080/hello/hello"/>
        </wsdl:port>
    </wsdl:service>


    <wsp:Policy wsu:Id="AsymmetricSAML2Policy">
        <wsp:ExactlyOne>
            <wsp:All>
                <!--
                      The wsam:Addressing element, indicates that the endpoints of this
                      web service MUST conform to the WS-Addressing specification.  The
                      attribute wsp:Optional="false" enforces this assertion.
                -->
                <wsam:Addressing wsp:Optional="false">
                </wsam:Addressing>
                <!--
                      The sp:AsymmetricBinding element indicates that security is provided
                      at the SOAP layer. A public/private key combinations is required to
                      protect the message.  The initiator will use it’s private key to sign
                      the message and the recipient’s public key is used to encrypt the message.
                      The recipient of the message will use it’s private key to decrypt it and
                      initiator’s public key to verify the signature.
                -->
                <sp:AsymmetricBinding>
                    <wsp:Policy>
                        <!--
                              The sp:InitiatorToken element specifies the elements required in
                              generating the initiator request to the ws-provider's service.
                        -->
                        <sp:InitiatorToken>
                            <wsp:Policy>
                                <!--
                                      The sp:IssuedToken element asserts that a SAML 2.0 security token is
                                      expected from the STS using a public key type.  The
                                      sp:IncludeToken="http://docs.oasis-open.org/ws-sx/ws-securitypolicy/200702/IncludeToken/AlwaysToRecipient">
                                      attribute instructs the runtime to include the initiator's public key
                                      with every message sent to the recipient.

                                      The sp:RequestSecurityTokenTemplate element directs that all of the
                                      children of this element will be copied directly into the body of the
                                      RequestSecurityToken (RST) message that is sent to the STS when the
                                      initiator asks the STS to issue a token.
                                -->
                                <sp:IssuedToken
                                        sp:IncludeToken="http://docs.oasis-open.org/ws-sx/ws-securitypolicy/200702/IncludeToken/AlwaysToRecipient">
                                    <sp:RequestSecurityTokenTemplate>
                                        <t:TokenType>http://docs.oasis-open.org/wss/oasis-wss-saml-token-profile-1.1#SAMLV2.0</t:TokenType>
                                        <t:KeyType>http://docs.oasis-open.org/ws-sx/ws-trust/200512/PublicKey</t:KeyType>
                                    </sp:RequestSecurityTokenTemplate>
                                    <wsp:Policy>
                                        <sp:RequireInternalReference />
                                    </wsp:Policy>
                                </sp:IssuedToken>
                            </wsp:Policy>
                        </sp:InitiatorToken>
                        <!--
                              The sp:RecipientToken element asserts the type of public/private key-pair
                              expected from the recipient.  The
                              sp:IncludeToken="http://docs.oasis-open.org/ws-sx/ws-securitypolicy/200702/IncludeToken/Never">
                              attribute indicates that the initiator's public key will never be included
                              in the reply messages.

                              The sp:WssX509V3Token10 element indicates that an X509 Version 3 token
                              should be used in the message.
                        -->
                        <sp:RecipientToken>
                            <wsp:Policy>
                                <sp:X509Token
                                        sp:IncludeToken="http://docs.oasis-open.org/ws-sx/ws-securitypolicy/200702/IncludeToken/Never">
                                    <wsp:Policy>
                                        <sp:WssX509V3Token10 />
                                        <sp:RequireIssuerSerialReference />
                                    </wsp:Policy>
                                </sp:X509Token>
                            </wsp:Policy>
                        </sp:RecipientToken>
                        <!--
                             The sp:Layout element,  indicates the layout rules to apply when adding
                             items to the security header.  The sp:Lax sub-element indicates items
                             are added to the security header in any order that conforms to
                             WSS: SOAP Message Security.
                        -->
                        <sp:Layout>
                            <wsp:Policy>
                                <sp:Lax />
                            </wsp:Policy>
                        </sp:Layout>
                        <sp:IncludeTimestamp />
                        <sp:OnlySignEntireHeadersAndBody />
                        <!--
                            The sp:AlgorithmSuite element, requires the Basic256 algorithm suite
                            be used in performing cryptographic operations.
                       -->
                        <sp:AlgorithmSuite>
                            <wsp:Policy>
                                <sp:Basic256 />
                            </wsp:Policy>
                        </sp:AlgorithmSuite>
                    </wsp:Policy>
                </sp:AsymmetricBinding>
                <!--
                    The sp:Wss11 element declares WSS: SOAP Message Security 1.1 options
                    to be supported by the STS.  These particular elements generally refer
                    to how keys are referenced within the SOAP envelope.  These are normally
                    handled by CXF.
                -->
                <sp:Wss11>
                    <wsp:Policy>
                        <sp:MustSupportRefIssuerSerial />
                        <sp:MustSupportRefThumbprint />
                        <sp:MustSupportRefEncryptedKey />
                    </wsp:Policy>
                </sp:Wss11>
                <!--
                    The sp:Trust13 element declares controls for WS-Trust 1.3 options.
                    They are policy assertions related to exchanges specifically with
                    client and server challenges and entropy behaviors.  Again these are
                    normally handled by CXF.
                -->
                <sp:Trust13>
                    <wsp:Policy>
                        <sp:MustSupportIssuedTokens />
                        <sp:RequireClientEntropy />
                        <sp:RequireServerEntropy />
                    </wsp:Policy>
                </sp:Trust13>
            </wsp:All>
        </wsp:ExactlyOne>
    </wsp:Policy>

</wsdl:definitions>

